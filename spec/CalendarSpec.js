// Generated by CoffeeScript 1.3.1
(function() {

  describe("CalendarSpec", function() {
    var container;
    container = void 0;
    beforeEach(function() {
      Timecop.install();
      Timecop.freeze(new Date(2012, 4, 1, 10, 48));
      return container = $("<div>");
    });
    afterEach(function() {
      return Timecop.uninstall();
    });
    describe("arguments", function() {
      it("should accept zero arguments", function() {
        return container.calendar();
      });
      return it("should accept an options hash", function() {
        return container.calendar({});
      });
    });
    return describe("basic rendering", function() {
      beforeEach(function() {
        return container.calendar();
      });
      it("should contain day headers", function() {
        var header;
        return expect((function() {
          var _i, _len, _ref, _results;
          _ref = container.find("th");
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            header = _ref[_i];
            _results.push($(header).text());
          }
          return _results;
        })()).toEqual(["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]);
      });
      it("should contain an element for each day of the month", function() {
        var date, formattedDate, _i, _results;
        _results = [];
        for (date = _i = 1; _i <= 31; date = ++_i) {
          if (date < 10) {
            formattedDate = "0" + date;
          } else {
            formattedDate = date;
          }
          _results.push(expect(container).toContain("td[data-date=2012-05-" + formattedDate + "]"));
        }
        return _results;
      });
      it("should contain the days of the last month in the first week", function() {
        expect(container).not.toContain("td[data-date=2012-04-29][class=date-prev-month]");
        return expect(container).toContain("td[data-date=2012-04-30][class=date-prev-month]");
      });
      return it("should contain the days of the next month in the last weeks", function() {
        expect(container).toContain("td[data-date=2012-06-01][class=date-next-month]");
        expect(container).toContain("td[data-date=2012-06-02][class=date-next-month]");
        expect(container).toContain("td[data-date=2012-06-03][class=date-next-month]");
        expect(container).toContain("td[data-date=2012-06-04][class=date-next-month]");
        expect(container).toContain("td[data-date=2012-06-05][class=date-next-month]");
        expect(container).toContain("td[data-date=2012-06-06][class=date-next-month]");
        expect(container).toContain("td[data-date=2012-06-07][class=date-next-month]");
        expect(container).toContain("td[data-date=2012-06-08][class=date-next-month]");
        expect(container).toContain("td[data-date=2012-06-09][class=date-next-month]");
        expect(container).toContain("td[data-date=2012-06-10][class=date-next-month]");
        return expect(container).not.toContain("td[data-date=2012-06-11][class=date-next-month]");
      });
    });
  });

}).call(this);
